AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  github-actions-with-aws-sam

  Sample SAM Template for github-actions-with-aws-sam

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      AccessControl: PublicRead
      BucketName: gnguyendo-cloud-resume-website
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S3Bucket
                - /*
            Principal: '*'

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
        - geoffreyndo-resume.com
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          CachePolicyId: !Ref CloudFrontCachePolicy
          TargetOriginId: gnguyendoS3origin
          ViewerProtocolPolicy: redirect-to-https
        IPV6Enabled: True
        Enabled: True
        Origins:
          - CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginKeepaliveTimeout: 5
              OriginProtocolPolicy: http-only
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - SSLv3
                - TLSv1
                - TLSv1.1
                - TLSv1.2
            DomainName: !Join
            - ''
            - - !Ref S3Bucket
              - '.s3-website-us-east-1.amazonaws.com'
            Id: gnguyendoS3origin # A unique identifier for the origin. This value must be unique within the distribution.
        ViewerCertificate:
          CloudFrontDefaultCertificate: False
          AcmCertificateArn: arn:aws:acm:us-east-1:976309919253:certificate/077aca3a-89ea-4a7c-a5fd-5d0de141967e
          MinimumProtocolVersion: SSLv3
          SslSupportMethod: sni-only

  CloudFrontCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        DefaultTTL: 1
        MaxTTL: 1
        MinTTL: 1
        Name: gnguyendo-cloudfront-cache-policy
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: all
          EnableAcceptEncodingGzip: False
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: all

  ACMCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: www.geoffreynguyendo-resume.com
      DomainValidationOptions:
        - DomainName: www.geoffreynguyendo-resume.com
          HostedZoneId: Z04370213OSM26SKRBEJW
      ValidationMethod: DNS

#  Route53HostedZone:
#    Type: AWS::Route53::HostedZone
#    Properties:
#      Name: geoffreynguyendo-resume.com
#      QueryLoggingConfig:
#        QueryLoggingConfig
#
#  Route53DNSRecordSetGroup:
#    Type: 'AWS::Route53::RecordSetGroup'
#    Properties:
#      HostedZoneId: !Ref Route53DNSRecordSetGroup
#      RecordSets:
#        - Name: !Ref Route53HostedZone
#          Type: A
#          AliasTarget:
#            HostedZoneId: Z2FDTNDATAQYW2
#            DNSName: !GetAtt
#              - CloudFrontDistribution
#              - DomainName

Outputs:
  WebsiteURL:
    Value: !GetAtt
      - S3Bucket
      - WebsiteURL
    Description: URL for website hosted on S3
  S3BucketSecureURL:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - S3Bucket
          - DomainName
    Description: Name of S3 bucket to hold website content

